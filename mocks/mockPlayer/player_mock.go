// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rohit-tambe/mockgen-example/user (interfaces: UserI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserI is a mock of UserI interface.
type MockUserI struct {
	ctrl     *gomock.Controller
	recorder *MockUserIMockRecorder
}

// MockUserIMockRecorder is the mock recorder for MockUserI.
type MockUserIMockRecorder struct {
	mock *MockUserI
}

// NewMockUserI creates a new mock instance.
func NewMockUserI(ctrl *gomock.Controller) *MockUserI {
	mock := &MockUserI{ctrl: ctrl}
	mock.recorder = &MockUserIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserI) EXPECT() *MockUserIMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockUserI) GetName(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockUserIMockRecorder) GetName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockUserI)(nil).GetName), arg0)
}
